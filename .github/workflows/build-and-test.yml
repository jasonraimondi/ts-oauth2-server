name: build and test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  check_versions:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: |
          jsr_version=$(jq -r '.version' jsr.json)
          pkg_version=$(jq -r '.version' package.json)
          if [[ "$jsr_version" != "$pkg_version" ]]; then
            echo "Version Mismatch"
            echo "JSR: $jsr_version"
            echo "Node: $pkg_version"
            exit 1
          fi

  build:
    runs-on: ubuntu-latest
    needs: [check_versions]
    strategy:
      matrix:
        node-version: [ 20.x, 22.x ]
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
        with:
          version: 10
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: pnpm
          cache-dependency-path: pnpm-lock.yaml
      - run: pnpm install --frozen-lockfile --production false
      - run: pnpm test:cov
        env:
          CI: true
          DOMAIN: localhost
          JWT_SECRET: testing-access-token-secret
      - name: report coverage to code climate
        # code coverage report will only run on the main branch and not on pull request
        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
        run: |
          curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
          chmod +x ./cc-test-reporter
          ./cc-test-reporter format-coverage -t lcov coverage/lcov.info
          ./cc-test-reporter upload-coverage
        env:
          CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}
